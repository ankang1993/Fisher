<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Struts2配置文件的DTD信息 -->
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">
<!-- Struts2配置文件的根元素 -->
<struts>
    <!-- 配置了系列常量 -->
    <constant name="struts.custom.i18n.resources" value="resource"/>
    <constant name="struts.i18n.encoding" value="UTF-8"/>
    <constant name="struts.devMode" value="true"/>
    <constant name="struts.multipart.maxSize" value="524288000"/>
    <constant name="struts.multipart.saveDir" value="/WEB-INF"/>
    <package name="default" extends="struts-default">
        <interceptors>
            <!-- 配置普通员工角色的权限检查拦截器 -->
            <interceptor name="empAuth" class=
                    "fisher.action.authority.EmpAuthorityInterceptor"/>
            <!-- 配置经理角色的权限检查拦截器 -->
            <interceptor name="mgrAuth" class=
                    "fisher.action.authority.MgrAuthorityInterceptor"/>
            <!-- 配置普通员工的默认的拦截器栈 -->
            <interceptor-stack name="empStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="empAuth"/>
            </interceptor-stack>
            <!-- 配置经理的默认的拦截器栈 -->
            <interceptor-stack name="mgrStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="mgrAuth"/>
            </interceptor-stack>
        </interceptors>

        <!-- 定义全局Result映射 -->
        <global-results>
            <!-- 定义sql、root两个异常对应的视图页 -->
            <result name="business">/WEB-INF/content/error.jsp</result>
            <result name="root">/WEB-INF/content/error.jsp</result>
            <!-- 定义login逻辑视图对应的视图资源 -->
            <result name="login">/WEB-INF/content/login.jsp</result>
        </global-results>

        <!-- 定义全局异常映射 -->
        <global-exception-mappings>
            <!-- 当Action中遇到HrException异常时，
                系统将转入name为business的结果中 -->
            <exception-mapping
                    exception="fisher.exception.HrException"
                    result="business"/>
            <!-- 当Action中遇到Exception异常时，
                系统将转入name为root的结果中 -->
            <exception-mapping exception="java.lang.Exception"
                               result="root"/>
        </global-exception-mappings>

        <!--============================下面是员工角色的Action========================-->
        <!-- 定义处理登出请求的Action -->
        <action name="logout"
                class="fisher.action.LogoutAction">
            <result>/WEB-INF/content/logout.jsp</result>
        </action>
        <!-- 定义处理登录系统的的Action -->
        <action name="processLogin"
                class="fisher.action.LoginAction">
            <result name="input">/WEB-INF/content/login.jsp</result>
            <result name="mgr">/WEB-INF/content/manager/index.jsp</result>
            <result name="emp">/WEB-INF/content/employee/index.jsp</result>
            <result name="error">/WEB-INF/content/login.jsp</result>
        </action>
        <!-- 定义处理注册系统的的Action -->
        <action name="processAdd"
                class="fisher.action.AddEmpAction">
            <result name="input">/WEB-INF/content/register.jsp</result>
            <result name="failure">/WEB-INF/content/register.jsp</result>
            <result>/WEB-INF/content/login.jsp</result>
        </action>
        <!-- 进入打卡 -->
        <action name="employeePunch"
                class="fisher.action.PunchAction">
            <interceptor-ref name="empStack"/>
            <result>/WEB-INF/content/employee/punch.jsp</result>
        </action>
        <!-- 处理上班打卡 -->
        <action name="*Come" method="come"
                class="fisher.action.ProcessPunchAction">
            <interceptor-ref name="empStack"/>
            <result>/WEB-INF/content/{1}/index.jsp</result>
        </action>
        <!-- 处理下班打卡 -->
        <action name="*Leave" method="leave"
                class="fisher.action.ProcessPunchAction">
            <interceptor-ref name="empStack"/>
            <result>/WEB-INF/content/{1}/index.jsp</result>
        </action>
        <!-- 查看自己的非正常出勤 -->
        <action name="viewUnPunch"
                class="fisher.action.ViewUnAttendAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="empAuth"/>
            <result>/WEB-INF/content/employee/viewUnAttend.jsp</result>
        </action>
        <!-- 进入异动申请 -->
        <action name="appChange"
                class="fisher.action.AppChangeAction">
            <interceptor-ref name="store">
                <param name="operationMode">RETRIEVE</param>
            </interceptor-ref>
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="empAuth"/>
            <result>/WEB-INF/content/employee/appChange.jsp</result>
        </action>
        <!-- 提交异动申请 -->
        <action name="processApp"
                class="fisher.action.ProcessAppAction">
            <interceptor-ref name="store">
                <param name="operationMode">STORE</param>
            </interceptor-ref>
            <interceptor-ref name="empStack"/>
            <result name="input" type="redirect">
                /appChange.action?attid=${attId}
            </result>
            <result>/WEB-INF/content/employee/index.jsp</result>
        </action>
        <!-- 查看全部文件的Action -->
        <action name="viewFile"
                class="fisher.action.ViewFileAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="empAuth"/>
            <result>/WEB-INF/content/viewFile.jsp</result>
        </action>
        <!-- 下载文件的Action -->
        <action name="downloadFile"
                class="fisher.action.DownloadFileAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="empAuth"/>
            <!-- result type设置为stream -->
            <result type="stream">
                <!-- MIME类型 -->
                <param name="contentType">application/octet-stream</param>
                <!-- inputName的值与action获取输入流资源的方法名相对应(action中定义getInputStream方法,并且返回类型为InputStream) -->
                <param name="inputName">targetFile</param>
                <!-- 设置带附件的文件 动态获取文件名(action中定义getDownloadFileName方法) -->
                <param name="contentDisposition">attachment;filename="${fileName}"</param>
                <!-- 设置缓冲大小 -->
                <param name="bufferSize">2048</param>
            </result>
        </action>
        <!-- 上传文件的Action -->
        <action name="uploadFile"
                class="fisher.action.UploadFileAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="fileUploadStack"/>
            <interceptor-ref name="empAuth"/>
            <result type="redirectAction">
                <param name="actionName">viewFile</param>
            </result>
        </action>
        <!-- 删除文件的Action -->
        <action name="deleteFile"
                class="fisher.action.DeleteFileAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="empAuth"/>
            <result type="redirectAction">
                <param name="actionName">viewFile</param>
            </result>
        </action>
        <!-- 进入更改密码页面的Action -->
        <action name="editPass">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="empAuth"/>
            <result>/WEB-INF/content/editPassword.jsp</result>
        </action>
        <!-- 更改密码的Action -->
        <action name="editPassword"
                class="fisher.action.EditPasswordAction">
            <result name="input">/WEB-INF/content/editPassword.jsp</result>
            <result name="failure">/WEB-INF/content/editPassword.jsp</result>
            <result name = "login">/WEB-INF/content/login.jsp</result>
            <result>/WEB-INF/content/editPassword.jsp</result>
        </action>

        <!--============================下面是经理角色的Action========================-->
        <!-- 经理查看员工 -->
        <action name="viewEmp"
                class="fisher.action.ViewEmpAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="mgrAuth"/>
            <result>/WEB-INF/content/manager/viewEmp.jsp</result>
        </action>
        <!-- 经理删除员工 -->
        <action name="deleteEmp"
                class="fisher.action.DeleteEmpAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="mgrAuth"/>
            <result type="redirectAction">
                <param name="actionName">viewEmp</param>
            </result>
        </action>
        <!-- 经理查看打卡 -->
        <action name="viewPunch"
                class="fisher.action.ViewPunchAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="mgrAuth"/>
            <result>/WEB-INF/content/manager/viewPunch.jsp</result>
        </action>
        <!-- 经理查看申请 -->
        <action name="viewApp"
                class="fisher.action.ViewAppAction">
            <interceptor-ref name="basicStack"/>
            <interceptor-ref name="mgrAuth"/>
            <result>/WEB-INF/content/manager/viewApps.jsp</result>
        </action>
        <!-- 经理处理申请 -->
        <action name="check"
                class="fisher.action.CheckAppAction">
            <interceptor-ref name="mgrStack"/>
            <result type="chain">viewApps</result>
        </action>

        <!--============================其他Action========================-->
        <action name="*">
            <result>/WEB-INF/content/{1}.jsp</result>
        </action>
    </package>
</struts>